# This is a basic workflow to help you get started with Actions

name: Slack Test

# Controls when the workflow will run
on:
  push:
    branches: [main]

env:
  VAR1: 123

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Issue
        env:
          JOB_CONTEXT: ${{ toJSON(github.event.issue) }}
        run: echo "$JOB_CONTEXT"
      - uses: actions/checkout@v2
      - name: Gradle Test
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Gradle
        run: |
          ./gradlew clean build
      - name: Upload app.jar
        uses: actions/upload-artifact@v2
        with:
          name: app-artifact
          path: application/build/libs/*.jar
  result_test:
    needs: [build]
    if: ${{ needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
#       - uses: actions/checkout@v2
#       - name: Gradle Build
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'adopt'
      - uses: actions/download-artifact@v2
        with:
          name: app-artifact
      - name: Make Dockerfile
        run: |
          echo 'FROM openjdk:11-jdk-oracle\nARG JAR_FILE=*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT ["java","-jar","/app.jar"]' >> Dockerfile
      - name: Build with Gradle
        run: |
          ./gradlew clean build
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Build
        uses: docker/build-push-action@v2
        env:
          TAG1: ${{ format('{0}/cicd-test:{1}', secrets.DOCKERHUB_USERNAME, 'v1.0') }}
          TAG2: ${{ format('{0}/cicd-test:latest', secrets.DOCKERHUB_USERNAME) }}
        with:
          context: .
          push: true
#           build-args: mysql_host=${{ secrets.MYSQL_HOST }},mode=prod
          tags: ${{ env.TAG1 }},${{ env.TAG2 }}
#           labels: ${{ steps.meta.outputs.labels }}
        
#         uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
#         with:
#           arguments: build
          
#       - name: Send To Slack
#         env:
#           SLACK_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#           PR_URL: 'http://www.google.com'
#           REPOSITORY_URL: ${{ github.repository }}
#           PR_ACTOR: 'byunghakjang1230'
#         run: |
#           curl -X POST -H 'Authorization: Bearer ${{ env.SLACK_TOKEN }}' \
#           https://slack.com/api/chat.postMessage\?channel\=C02PJAHR30B\
#           \&blocks\=%5B%0A%09%09%7B%0A%09%09%09%22type%22%3A%20%22header%22%2C%0A%09%09%09%22text%22%3A%20%7B%0A%09%09%09%09%22\
#           type%22%3A%20%22plain_text%22%2C%0A%09%09%09%09%22text%22%3A%20%22%F0%9F%9A%80%20Create%20Pull%20Request%22%2C%0A%09%09%09%09%22\
#           emoji%22%3A%20true%0A%09%09%09%7D%0A%09%09%7D%2C%0A%09%09%7B%0A%09%09%09%22type%22%3A%20%22\
#           section%22%2C%0A%09%09%09%22text%22%3A%20%7B%0A%09%09%09%09%22type%22%3A%20%22mrkdwn%22%2C%0A%09%09%09%09%22\
#           text%22%3A%20%22\*Actor\*%5Cn%20%E2%97%A6%20\<\@${{ env.PR_ACTOR }}\>%20%5Cn\*PR%20URL\*%5Cn%20%E2%97%A6%20${{ env.PR_URL }}%20%5C\
#           n\*Repository\*%5Cn%20%E2%97%A6%20${{ env.REPOSITORY_URL }}%5Cn%22%0A%09%09%09%7D%0A%09%09%7D%2C%0A%09%09%7B%0A%09%09%09%22\
#           type%22%3A%20%22actions%22%2C%0A%09%09%09%22elements%22%3A%20%5B%0A%09%09%09%09%7B%0A%09%09%09%09%09%22type%22%3A%20%22\
#           button%22%2C%0A%09%09%09%09%09%22text%22%3A%20%7B%0A%09%09%09%09%09%09%22type%22%3A%20%22plain_text%22%2C%0A%09%09%09%09%09%09%22\
#           emoji%22%3A%20true%2C%0A%09%09%09%09%09%09%22text%22%3A%20%22Request%20Review\!%22%0A%09%09%09%09%09%7D%2C%0A%09%09%09%09%09%22\
#           style%22%3A%20%22primary%22%2C%0A%09%09%09%09%09%22value%22%3A%20%22byunghakjang1230\
#           %22%0A%09%09%09%09%7D%0A%09%09%09%5D%0A%09%09%7D%0A%09%5D\&pretty\=1

#       - name: build result to slack
#         uses: 8398a7/action-slack@v3
#         env:
#           TEST_ENV: 'Test!!!!'
#           REVIEWERS: '<@byunghakjang1230>, <@woojang1230>'
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#         with:
#           status: custom
#           custom_payload: |
#             {
#               channel: "C02PJAHR30B",
#               token: ${{ secrets.SLACK_BOT_TOKEN }}, 
#               attachments: [{
#                 color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#                 pretext: 'üîç Review Request ${{ env.TEST_ENV }}',
#                 fields: [{
#                   title: '‚úÖ Projectd',
#                   value: '- ${{ env.TEST_ENV }} \n',
#                   short: false
#                 },
#                 {
#                   title: '‚úÖ Reviewers',
#                   value: '-  \${{ env.REVIEWERS }} \n',
#                   short: false
#                 },
#                 {
#                   title: '‚úÖ Issue',
#                   value: `- üöÄ <$TEST_ENV|PR ÌôïÏù∏> \n`,
#                   short: false
#                 }]
#               }],
#               blocks: [{
#                   "type": "actions",
#                   "elements": [{
#                       "type": "button",
#                       "text": {
#                           "type": "plain_text",
#                           "text": "Review Request",
#                           "emoji": true
#                       },
#                       "value": "{\"reviewer_id\":\"byunghakjang1230\",\"\"}",
#                       "action_id": "review_request",
#                       "style": "primary"
#                   }]
#               }]
#             }
#         if: always()
        
#       - name: slack-send
#         # You may pin to the exact commit or the version.
#         # uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
#         id: slack
#         uses: slackapi/slack-github-action@v1.16.0
#         with:
#           payload: "{\"key\":\"value\",\"foo\":\"bar\"}"
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#         with:
#           # Slack channel ID where message will be posted. Needed if using bot token
#           channel-id: 'C02NF1Q4HDJ'
#           # Message to post into Slack. Needed if using bot token
#           slack-message: 'TestÏûÖÎãàÎã§. Î∞òÍ∞ëÏäµÎãàÎã§!'
#           #JSON payload to send to Slack if webhook route. If not supplied, json from GitHub event will be sent instead
#           payload: "{\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"You have a new request: \"}},{\"type\":\"section\",\"fields\":[{\"type\":\"mrkdwn\",\"text\":\"*Type:* Computer (laptop)\"},{\"type\":\"mrkdwn\",\"text\":\"*When:* Submitted Aut 10\"}]}]}"

      # Runs a single command using the runners shell
#       - name: Deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.AWS_HOST }}
#           username: ${{ secrets.AWS_USERNAME }}
#           key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
#           port: ${{ secrets.AWS_PORT }}
#           script: |
#             ${{ secrets.TEST_SCRIPT}}
